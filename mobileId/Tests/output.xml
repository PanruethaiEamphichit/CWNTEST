<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.0 on win32)" generated="20200415 16:37:07.399" rpa="false">
<suite id="s1" name="RegisterMobileId" source="C:\Users\panruethai.e\PycharmProjects\CWNTEST\mobileId\Tests\RegisterMobileId.robot">
<test id="s1-t1" name="E2E_Regist MobileID_001: Register 1 mobileId Successfully">
<kw name="Send Request getToken" library="keyword_getToken">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>getTokenSS</arg>
<arg>${base_url_issuer_mw}</arg>
</arguments>
<msg timestamp="20200415 16:37:09.205" level="INFO">Creating Session using : alias=getTokenSS, url=http://172.16.24.55:3216, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200415 16:37:09.205" endtime="20200415 16:37:09.206"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>username=${username}</arg>
<arg>password=${password}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200415 16:37:09.207" level="INFO">${body} = {'username': '001', 'password': 'secret'}</msg>
<status status="PASS" starttime="20200415 16:37:09.206" endtime="20200415 16:37:09.207"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200415 16:37:09.208" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200415 16:37:09.207" endtime="20200415 16:37:09.208"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>getTokenSS</arg>
<arg>${url_getToken_issuer_MDW}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200415 16:37:09.209" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"username": "001", "password": "secret"} 
json=None</msg>
<msg timestamp="20200415 16:37:09.304" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200415 16:37:09.208" endtime="20200415 16:37:09.304"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200415 16:37:09.305" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200415 16:37:09.304" endtime="20200415 16:37:09.305"></status>
</kw>
<status status="PASS" starttime="20200415 16:37:09.204" endtime="20200415 16:37:09.306"></status>
</kw>
<kw name="Response getToken should be Success" library="keyword_getToken">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200415 16:37:09.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200415 16:37:09.307" endtime="20200415 16:37:09.308"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${res_body}</var>
</assign>
<msg timestamp="20200415 16:37:09.309" level="INFO">${res_body} = {"access_token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIwMDEiLCJpYXQiOiIyMDIwLTA0LTE1VDA5OjM3OjA5LjMzNCIsImV4cGlyZWRhdGUiOiIyMDIwLTA0LTE1VDEwOjM3OjA5LjMzNCIsInBoYXNlIjoiODNhMTMyNmM3MDI1YTQ5MD...</msg>
<status status="PASS" starttime="20200415 16:37:09.308" endtime="20200415 16:37:09.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res_body}</arg>
<arg>access_token</arg>
</arguments>
<status status="PASS" starttime="20200415 16:37:09.309" endtime="20200415 16:37:09.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res_body}</arg>
<arg>"expires_in":3600</arg>
</arguments>
<status status="PASS" starttime="20200415 16:37:09.310" endtime="20200415 16:37:09.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res_body}</arg>
<arg>Bearer</arg>
</arguments>
<status status="PASS" starttime="20200415 16:37:09.310" endtime="20200415 16:37:09.311"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>access_token</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200415 16:37:09.335" level="INFO">${AuthToken} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIwMDEiLCJpYXQiOiIyMDIwLTA0LTE1VDA5OjM3OjA5LjMzNCIsImV4cGlyZWRhdGUiOiIyMDIwLTA0LTE1VDEwOjM3OjA5LjMzNCIsInBoYXNlIjoiODNhMTMyNmM3MDI1YTQ5MDU4YzNhNzg1Y2FhZWE...</msg>
<status status="PASS" starttime="20200415 16:37:09.311" endtime="20200415 16:37:09.336"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${AuthToken}</arg>
</arguments>
<msg timestamp="20200415 16:37:09.337" level="INFO">${AuthToken} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIwMDEiLCJpYXQiOiIyMDIwLTA0LTE1VDA5OjM3OjA5LjMzNCIsImV4cGlyZWRhdGUiOiIyMDIwLTA0LTE1VDEwOjM3OjA5LjMzNCIsInBoYXNlIjoiODNhMTMyNmM3MDI1YTQ5MDU4YzNhNzg1Y2FhZWE...</msg>
<status status="PASS" starttime="20200415 16:37:09.336" endtime="20200415 16:37:09.337"></status>
</kw>
<status status="PASS" starttime="20200415 16:37:09.306" endtime="20200415 16:37:09.337"></status>
</kw>
<kw name="Send Request enrollMobileId" library="keyword_enrollMobileId">
<arguments>
<arg>E2E_Regist MobileID_001</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>enrollMobileIdSS</arg>
<arg>${base_url_issuer_mw}</arg>
</arguments>
<msg timestamp="20200415 16:37:09.339" level="INFO">Creating Session using : alias=enrollMobileIdSS, url=http://172.16.24.55:3216, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200415 16:37:09.339" endtime="20200415 16:37:09.340"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${onchainJson_Path}${TC_No}.onchain</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200415 16:37:09.341" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\panruethai.e\PycharmProjects\CWNTEST\mobileId\ChainCodeAPI\Resources\OnchainFIle\E2E_Regist MobileID_001.onchain"&gt;C:\Users\panruethai.e\PycharmProjects\CWNTEST\mobileId\ChainCodeAPI\Resources\OnchainFIle\E2E_Regist MobileID_001.onchain&lt;/a&gt;'.</msg>
<msg timestamp="20200415 16:37:09.342" level="INFO">${body} = {
  "dg1": {
    "mobile_no": "0810090001",
    "issuer": "AIS",
    "mobile_id_sn": "030810090001",
    "ial": "2.1",
    "status": "A",
    "face_engine_id": "YIT01234",
    "timestamp": "20...</msg>
<status status="PASS" starttime="20200415 16:37:09.340" endtime="20200415 16:37:09.342"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>network-user=${network-user}</arg>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer ${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200415 16:37:09.343" level="INFO">${header} = {'network-user': 'user1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIwMDEiLCJpYXQiOiIyMDIwLTA0LTE1VDA5OjM3OjA5LjMzNCIsImV4cGlyZWRhdGUi...</msg>
<status status="PASS" starttime="20200415 16:37:09.343" endtime="20200415 16:37:09.343"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>enrollMobileIdSS</arg>
<arg>${url_enrollMobileId}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200415 16:37:09.345" level="INFO">POST Request using : uri=/enroll-mobileid, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'network-user': 'user1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIwMDEiLCJpYXQiOiIyMDIwLTA0LTE1VDA5OjM3OjA5LjMzNCIsImV4cGlyZWRhdGUiOiIyMDIwLTA0LTE1VDEwOjM3OjA5LjMzNCIsInBoYXNlIjoiODNhMTMyNmM3MDI1YTQ5MDU4YzNhNzg1Y2FhZWE0YTYyMWE5ZDJmMyJ9.nrckSdQzsZhOqwxFmqMWK9nOzkaiP1uYrefJeZbdQew'} 
data={
  "dg1": {
    "mobile_no": "0810090001",
    "issuer": "AIS",
    "mobile_id_sn": "030810090001",
    "ial": "2.1",
    "status": "A",
    "face_engine_id": "YIT01234",
    "timestamp": "2020-04-15T05:21:48"
  },
  "dg2": "dIFoYY9aKNeopGyKtICQwl1cGn1lhq+FklFOY1w4bIGmgmN7dG1zWoGjYZW1ZJFnl1ZXs11ydKB8joZd1ndlonBPamZvmoCNj5+KY3KNicZFdGlyaSqBGmBMrLl9foJ+bK10cXCRkEc/hoGTZFl6iFxRikR8fX2blWpklIljaWZ2haNbZFKsiZiLLXql0zx/Z4tycZWBd2p6hIGHXadeT1NxcWR2c3V4h5Bm0Ip4anRFVFNoaGFkiE6ISIeaWIxdY6F5jaRhjrxff2eCgU9oV5GAcmJmq35YaoGBgIqNf4OKamiEiqGJjnSjcJpvZGiYVW5rin6Minl5cWVrnKyQlH9KjnBdXod0aqxyTHB+f3Z3bYh7h2Z4jWJ6eWhigF5gepF9h2mXh4ZwaYR/V4+Kg5xoanKYWpI/loGHcWZlj4J1lJBXdH5tg4RSnFJnbH1Bcn92bF9mcYdcXG9qaoaPf2ZPe2uKdJGdql+OcXKHfbWVc4x2koRpaGl6d1JBa3FjYo+LkGtoeHVjameGYHmBUGd2cWxtdXxjf1ifWnZPbnZsYomDcldje0l7fmZqZVxyj46DjG9xhHRwdH1hbXxvmX+AZ3iGaGBrT4BzcX59bXhsgn9uWHWKg4SLiYpbcXV+XHCdcnJwkXJpdpNsfVJrVnp/eY13kI5YgltshoVzlYGDcW5aemmFhkGGhHZad39ai3qOhYB9cGqhhW52enltenaFZHONU4lnfaFyc2hkeWtyXFZwfpZ7nWd0dotwenJ9hmt0aGuLhGdaemZ6iIhramuAhGyDgmtcdpB0amx/f4h4g29ngXZTjIp1R21hY3Nqc45ufYRsaIqMdp1vlHVodHZzaXNwkWFsalqBfVx1iIJ7g4SMZWGFW3xbaIeDdFqDi3t5eIVeX3VUlXZbb3lfhHd4c3pwgF13gHpqi3ZveoJ3fnpifGN+b3t+hXBuZmuGXIV4iGRuZ2mCd2pzh2WIb4iNZZ9zfYdzfIpucZplaGd8ZIqNa354X2F9f1uKY4JreXVpdmBsgop7Y294cVVvaH1xfWh/fUtxZH9deWGVfmyOen93bIB5jGd+doJud513g419ZHBddHKPd2p5dWZ/Zo52coZ4aJd0gYaGgW6TeW51YXZ1i4J8emh4W3Fpg2OGfnSCfmiLdo9xfmp5mHN/gmhofX9yWnSLeml+end9i4l6h35sdXNbYZl4fYWOgGhwbFlkkWeRiZFva515bGx1endmdXJmYYRshIl/cJR6iXWHjWaNhGKYhHRye3d9dpp4WW11em15bYJ8dHR4bl6Di3eDcmZoc1p+ZnWNbnyJcICJZHN3aWB0XGtsfW+Di2lgcIt1coR8mWV1em1lgnaFdX6Gd2mAZG1xcoN6WIl8b3xYem14aXR4ZoRycmJ+YolkgndacoJZbnZ/jnGAhYFrbm+BfHZ1fXJ0eI2Ajn9scH55XmRyeItlhHtzbIBldWV7an51bn14enR4aXeMaHd2Z4Vud3VfenJ/hn5eiIiDc3Zub3x2gHpncHpdY3ptf4VueH9uimtuaWlwZmyBY12BkHVveH6LeHhkb32CgW9taoxsbnFydWp/e3p9YHVzf4dqdIWDk3l3hWV9aYRycXFrgnB3a29mW4pwdHaFc4J9eXd/hYhghoNqdXV/coZxcXZ8ZnKCb36Ac3F7eIJ8gX1shWhaamiDfHB7hHeAe3J/eXl3goF8cGF6h2NweYN9fH14c3lme3SHd2p2ZW9+fYWEboZyhId0doh7gWx4d25ne3pyaoRndoNygIlzdGt+eHNkf3tyd3Btd2iIcFaBZoN6bnyCcWRxenF8cWhyXnJ8d2qQbIJ9hYOFcXl3cohmcGiPh1Z3coWCfn16c4NwYW9rfol3Z2t7gnGQbXFweX1zeXGRfYBmdoB/dGp9dnd4eGOChXuAdXxtfoR9aG6IbnByc3NzWW9ziGdzboKIcXxke3V2aIJtgXJxdYF8f4SAbXBzc3eKcXh2aXZpdJlse1l8hWZtd4aMcXtxfXh4c3qBi2F0f5KBcHOCe2ptfXl5eW16aYB8e26Cb3R4Z3plcnGGiHx/hmlxdn1lZ3NvcoBre2+Df2uGcHZueXyIcXRhiHN6b35oa4J8dGt4hn53cIRmen5wenJzgX5mbXV3eH51enBshJRpbYduandoiXZydIV6bnVwdmp4end1cHV3cHpjdHJ1cZh5jHB+hXpleV91fIR0bHZ8dXh8cmh9hHxlfXqBdIdxin5pjW98a4NrfnGVf3R2cZJlfXx7eIZ7f298hXhnZ3x+eXFyeHlzgIBxY2acc4F/Y3VthXqDdHuCgXpvb4p7aWx0eXN+cXeHf3NvbWdzdHZxaWSGeXFshYJ8hm99fXF7inOKhoSGcX1yX3aCdXl7fYBoZmt9e3B4fomDiX9qhnJ9fHt6cXmCcoN1h3prbGtpe3J+e3Brd3CCiX2FhHWGdHB+YnxufIGAdIZtaW+Fb3yNdmxyeXpudotxfId/gXdwZ3J2jHiLb3h1cnuCend3gn2DdGJuZ3d6anx9jG5xe3BrbnV3cG5mfnZ2hnd9iGyHbYRten57VWeReXiCfIZxgYCRZ26Cc2d7eIh2bG59fHeAb354fXV8dHh5dV5/cnB3hHp/gnF0eF2Ac3+GhIp9hoZ6cXBseXVTfYF3f25egXh1gntybYpqenVxf3B+d2xzeGVpe357em58jYN8gXNweGt1eIBuin16iHiCbF51hHVye3hzYIF7cHlxfm9zcHZyaIZhf3ZxdIqHaXd8cnuGeIlrfnx1Z2d2gWCDc293fXJofW58cYSDlHiLbmp4jGR8Xohzb3l1fGtpZXJ2g3Z9fIRrfYCEc2VzZWhuf3NskH9scXSHcH12c319aIl3enpwdH2CcGp+amRzfHR2eH57fnRzf3F/eoRzdn+Iem57U4GRb35+a4Zue3JuhXJ7dHp1dXptcG1ie3FygmRpdGd2f4Fzcnl5cn17f195fX1jdoV1d4Nocnd0cX6Kh399aXxvc3CReHhudnJxdHh+enlxjIFqcnZ/dGhxdmp/d4VqiYuJd3OFc3iHdGWAcXBseYFjd3d5Z4V8en55cHV9Z3Z/fm9+dGVpjXBtdW52gXZ+dXRnd4J2ZW19cXZ0aIJ8c4SDdnWAbHJ/a3d2Y31zenJren55bnR4bnZwaHd1YnJkfGxqe3Rtcm93dHV0ZHN8fmp+em94fIeEd210bXZ8mrWwiH9x/pt1i7akw+qixL1OLAFwe2lcTkY90U1dlZ1kewhklTxvV5q1N4y6sG+hblYqfVdJnrWASaOBrVePom2MWYxUDdB33oLTmrSUWdKSm2RnR51Vi33V4a97lb2TgFlBxYZ0p8RXpNddg02wq6yqwIOXnZymaZyFj1iK3mp8aNRkqFjDll5dnWa4RXOEfJ1kj5Ziw3t9zGCdrshhcGSMSo5zmpx2grLSUmhhVmU9h4Cmok1mIFifnGuAf5tzpH2DqL61kX9qZV+zkJ9WknOlk4B7ntdzP31yqGy2d3WforBje2eGabRTbIdxg4+BhZG8d659iIqlxoGpqZxhgL2PkFFgkJ5cooeFcoZwj213qaVseEmOYYBunZiggFqSgIuufJaJqIqZoI9nn6qVf5iReWyDQ4GItG6RoY2lZnxynXyLgEqZnoNQsHeFbpNOi4tee5ZbeIyBe4t2tW2LroeJnpqXmqayi5N9k6R9QoqLn619jIp7loOObX16coZPbGyjkYWckp+Se3yXoapyi32bbKScfIJ/m5B0gaWkaYell56Me5B9bJWSk4KTgZ2BgIOBi6ecmoDHko1+lZVniIOJeoiMZJqVdXCAg5FrfLjT1Ht3ur2tmI6MhmKXh7HInZ6danJvfJ5+jo2FlYidjIdyma2Fp46YdJGCinFwe6dwcJSZhYaNe5JveJeZroqQmXSPnYKblISHsqWng6ecrYCNtpCbnpScmqKRd4Oab5qDdJ2Gs2KHn514oG5tgIGFi4+pkne1k3aHncN+iaqSj467mX+QfXCkl5iVcJqQdpOljHqKcJtven1uc6JxjoyZkJyIh5uPp4NzjpCbn6mGg42leo5soJ6Ro3yDnXKDfKG3jIyOmmWRZpGHonWagYaJinhpenJ7iouAZ3p+iXa+jJx5s5SAlYmNjoeZqWSZbYOHpmejcZp3gX+Wg3SLdolmpoKSnHKDpYSAjJ+Bj2mBkJGTgpGWf5aBmIl/hpilcnqFmoeTd45+tYKdg2t5kZCOenCLnp2JgKh3iY6aoIiHjYRulZaZj5iYiZRxnZlrfJyCoIebi6OSnIZsn6OCoWyYjZuFg6mYmZaEpnWClJWXjol1hKSefIVejayUc4SApJuKho+KhoaKiXxoeoqMd3WIfoiOin6Bha6ei5SSknV4gqOYhHyAhXmTu6R3m5yqmpKQjJuVfoSik6WNgoegioGXgX94npqPh3qRf5eVoKiQanSPh4mWnnqKl5l6jJiVjn6NjZCPmIWBcpeajpKJcp19kp1/p4aSfaOrh4WDgoeTg4dzmJeFf5KXmX12iK6UgLeWjIKCjH6MgoqHcJCBiYSOYJdwhX6HfG6Dfp6orZ2eiY6Kho19kIV3fo+BiYCaiIWgmJCCiKKJjn6PjXmChH2ThpCRf4qUg4qKh3B4j42Sf4OgoG6CiIWRl56Mgo2Tj3eRg4mgpXuWkXqTjpB/c5ixjoSWk3+GgZOIhZqpe5Z4j4x6fZONiZmPeX+Je3uAh46ImYKoeH2Ph4+EiomMgYyGhpCCnad/i5hxg4uDjYWOhoGMkHGQhYaFjY2Mm3uWkpKJl3ORj4+UlYVtjY6PlZ+gj4SHgYyDdIpyf4mSeJaMipGknmaPiJSPmZ6YlJV3eJyYdYCKioaEkH52jIGghZWOnXp7h4mLdJaSiZaPfYWEkoeHdZl9jHWZepF/hZKAjIqTkI+YfoGLnZd+i3uDl5OflJKWjJCgf3WVk5p+jJCBmZSFlYqqoKSNm4J0nJCVpZiZc5aHgo2Ej4SajoR6kICWkoqNhIyHm3uMipaFe46IkJ+XjZCGlKaJe5GEgJV6iJCGfYCHnXmThZaMgpSOjJ+JhY6bhWuPl5Kai4eAloVyh3qPiY2AjYl7lJdvhZOHgY+RmpCDgop9mHqPkpCDfoCFkYuWiHaniJyej4OUc3mFkoWVgXuGho6Mi497joSIe46NgJucfYR7hHqKioqUjIl3fnyBmnt2gouBbIydio6Cf3uOeJmYj32fm4SEjayIhICak4aXkoyCg4GNf6N/gZafc4R9d416hIadkYxsfZ+fhZV7j3aRko2bgJaHeZGXm4t/gYCNgpSce4iKjpCbhIqOmYpzj56JfY+GkHCPoIGZf31ymJ5/hn5viY+WiZWDmZWHjYtzoY2CcoR8fo6KjGt4lI95lnWBloSYgYCMioN2lYWAbo2Qh4WXiYyUfo+dhoNxgZKNe5CegYuWioSOhmuDl6F4gXuRjoKSlo6lgoegfImRgH+Jhn2FlJSWjZCRm7WGgYyEnYx/jZCllZSLf4t3kpmGjqOckJiGfoZ6lH2Sh4iIf4+UiI6VonV/lIqXmYKPi66pgY6XeIaLhYOWcYShnnmKiZJ8gJGNcp6ce4mDf4xsi4agh4KRh4WIkomGiIF2foeRe4GogX53jYOJb5yFkoOGfIqbi4+BgG+AeIKXepp4kJmAh5WTjX6Lg46ViYKYfo6AiIqWi3aAioWKlpqpjYqHnpl2ioqDo4qUgI6Mg5iXgJeGmoabfomKgIWRgYmEjpyIf4+UhIuCnIiRg4uKkIGBkYaFhoCchX17jKeDkKh7jpF8k4eOkaSHkZJ9noqBlXZ3kId7kYaUgpOThomHhYSGjpaHi5KMlX2LhJGGkJOGnIqHipCAg42Qi5GAiH2Rm2+OnniFioiDmImhi357fYFvl4+Si5l4jJGQlYR/mJmPiICSiJyXiYJ8eaqPlo9xkYiFh5KLjIyDfIN3fHeLhYaQhIuChJGJnXt/kZV/d5GJgI+ajYGVh5KLg4V9gpWImZKcnn6RlYaUiYuNk4x5hpaYkoiTjYeKjY2Hj4OOgICSlpGAnm+Rl4qQj5GTi5qBlYKMgpaHg4R6i4J8loh4hZiJj4GRmpSBhJGmjZCJgYeWhZeSjomFh5CJepiSfKiNlZaBkX2QgoikjYSOdZGLlIyEjJSLk4OMhJKXl52VoYqSj4aPiYSgmn+Mf6WEno19c4Vxe4F4e4aOhpF6kpCJiYqMeYWImYaIi4KHlI6GiImFhY+YnJWMkIKRgYiGloqafo14gI+Slpx+ioCkg5Z6gol/ioeDnY2WhZmVio+GjpSHfoSBfH+ViouRkXaHgZGOgIeOeZGjlY6Qf4CAkImEm4uTjoyWnH6Af4qImY6HnYOMjY2Ak4x5hpWJloyYeZGCh4OGkn+Onol0i5uUjXl5mImUio+AipKGgp2SfYGRhX5+h350m4l5jn+Ng46TfJOnhZCIf49+kp+TeoWOjYyTg5SCeXx0k46LjYuLg4qNh4OKgn6Bm5x7goGVeoOUiYOMj4l5loh/jouWjYyKjYmQjYWMf3NrHUeRle7CoDWRSLFlLEd04QrDgJGoSF9cATqtYAQ6",
  "sod": {
    "hdg1": "+0a83/5AXGx4GoMs2DPSX0vcK/RnLLIPidjqd7HWkLQ=",
    "hdg2": "VWkt4K3naAHkp6XfqA17grszxmM0TK1SRn3YdsqDw/E=",
    "hface_template": "5iEqLto9P1zxyBBtMGahPDtkfQW0nCeRGt4xMFKw0CA=",
    "dig": "d7WWiDTyQNXUkeMYLNOcF2ru27YHz9pYoNpCveekYpI=",
    "sig": "zMOYeDRFF9Sp6ruGv6+XP2YZK//XdHNkFlCNCjOjggCrK8OYUgPU+CXhYqmp3ao5IfCn2+J1lYVrKOYtFzz1eOoYLIGCtMf8MaCNaSzk2wPHDUROjwMl0w33cnKj8u/QvwzR5EKzRMuakJ3b7x9bD5T6htbOW0DK6mzN+1ZW4ojm8Tmib5wsqimT4LYmvW++XGiY3AH5aoj/HFr2hhyHODqMBED+EI9mv68iOsMPheeIYv3tlqaQawqJAefq1U8rJL+Km7ykEb2CBFZDwVGy6icMu/rWphQXBdmjq+obNz2peSd9a+ZwWVIcaNOighfXmazbEUGP6OA0RiqxvBFGtg==",
    "cert": "MIIEOTCCAyGgAwIBAgIRAPX2oKvmoIPVDQnAKU7LjlUwDQYJKoZIhvcNAQELBQAwVjELMAkGA1UEBhMCVEgxEzARBgNVBAgMClNvbWUtU3RhdGUxDTALBgNVBAoMBE5CQ1QxDDAKBgNVBAsMA0FJUzEVMBMGA1UEAwwMQUlTIE1PQklMRUlEMB4XDTE5MDUyNzExMTk1N1oXDTIwMDUyMTExMTk1N1owUDELMAkGA1UEBhMCVEgxEzARBgNVBAgMClNvbWUtU3RhdGUxDDAKBgNVBAoMA0FJUzEMMAoGA1UECwwDQUlTMRAwDgYDVQQDDAdBSVMgRFNDMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0X6yWx9t6bmmE0HFAX2WkQh/J+Oj9UaihIQpuusEFnXSAHSkosH1Ag7iwq0+qK4NqS7mmm+X2IcKSP/slJ9q28PDOtFxFyA8Yu7+70HXqGkMKW1a65+oUGUm8qRgeQSrCiTbwMFRmNRQh8H4/Nb0wxn5UMAq450ouy5igYd+lM+qKKcKA34QRop8Y99Oc0W8jeKeRL/WM+MaxgMhIRzY42Ty3nflZcYXPQ3qM0TSgsUqQLKUIwhDWqQpdkX5GJXeOG1MckwkOARfeKZSJn3WBL5tGToih9ri9w6rIAZYwFqAC1I+r2OIONhqWwJkriM2Q2iPXz9FWSJ1sHcR3I2lYQIDAQABo4IBBjCCAQIwCQYDVR0TBAIwADARBglghkgBhvhCAQEEBAMCBkAwJAYJYIZIAYb4QgENBBcWFU9wZW5TU0wgR2VuZXJhdGVkIERTQzAdBgNVHQ4EFgQUjxsu2ehFabH4swKQFNQpWkxAfHoweAYDVR0jBHEwb4AUgi+efoPj94uwjRmmHc0zpO8dKHehRKRCMEAxCzAJBgNVBAYTAlRIMRMwEQYDVQQIDApTb21lLVN0YXRlMQ0wCwYDVQQKDAROQkNUMQ0wCwYDVQQLDAROQkNUghEA9fagq+agg9UNCcApTsuOVDAOBgNVHQ8BAf8EBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwEwDQYJKoZIhvcNAQELBQADggEBAJmJwFykhmKJBscwdQ4dTJA7VDeKk0m8rNCaZDJSlV3889Ck0cRyOwFEQPteU9YyGLY8P2ZfKsz4Jm+5GTdbhViEox5pG8s1pSxolM847auWtAIJmdC8YrvAFpLnup2KGHqdyGbxTX9Nhd4FLEH0eMEKWbrDVD8Dm/tOqwFkqEHFhD2QJzKx/M0ljPJUFoIRiqIpqp+Y2JmKKGtJllALxHQbf678+krNiLZdhNTBMfYzQqHzwxQ5GbVkBpX2flAeUcBpOWbZgDymcEKPsb73lUgeZLKw46fNlnFsvUyncSt/AOYsTIogyC7cxoXQNo8fosj7Gp8a59k//ELi43JkT1g="
  }
} 
json=None</msg>
<msg timestamp="20200415 16:37:09.512" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20200415 16:37:09.344" endtime="20200415 16:37:09.512"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200415 16:37:09.513" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20200415 16:37:09.513" endtime="20200415 16:37:09.513"></status>
</kw>
<status status="PASS" starttime="20200415 16:37:09.338" endtime="20200415 16:37:09.513"></status>
</kw>
<kw name="Response enrollMobileId Error 412: Existing MobileId" library="keyword_enrollMobileId">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>412</arg>
</arguments>
<msg timestamp="20200415 16:37:09.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200415 16:37:09.515" endtime="20200415 16:37:09.516"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${res_body}</var>
</assign>
<msg timestamp="20200415 16:37:09.517" level="INFO">${res_body} = {"error":"No valid responses from any peers. 1 peer error responses:\n    peer=peer0.ais.thaimobileid.com, status=412, message=Invalid Operation: The existing MobileId must be terminated. (mobile no: ...</msg>
<status status="PASS" starttime="20200415 16:37:09.516" endtime="20200415 16:37:09.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res_body}</arg>
<arg>Invalid Operation: The existing MobileId must be terminated. (mobile no: ${mobile_no}, status: A)</arg>
</arguments>
<status status="PASS" starttime="20200415 16:37:09.517" endtime="20200415 16:37:09.517"></status>
</kw>
<status status="PASS" starttime="20200415 16:37:09.515" endtime="20200415 16:37:09.518"></status>
</kw>
<kw name="Send Request recordConsentLog" library="keyword_recordConsentLog">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>recordConsentLogSS</arg>
<arg>${base_url_issuer_mw}</arg>
</arguments>
<msg timestamp="20200415 16:37:09.519" level="INFO">Creating Session using : alias=recordConsentLogSS, url=http://172.16.24.55:3216, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200415 16:37:09.518" endtime="20200415 16:37:09.519"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mobile_no=${mobile_no}</arg>
<arg>issuer=${issuer}</arg>
<arg>mobile_id_sn=${mobile_id_sn}</arg>
<arg>cid=${cid}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200415 16:37:09.520" level="INFO">${body} = {'mobile_no': '0810090001', 'issuer': 'AIS', 'mobile_id_sn': '030810090001', 'cid': '00000000-0000-0000-0000-030810090001'}</msg>
<status status="PASS" starttime="20200415 16:37:09.519" endtime="20200415 16:37:09.520"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>network-user=${network-user}</arg>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer ${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200415 16:37:09.521" level="INFO">${header} = {'network-user': 'user1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIwMDEiLCJpYXQiOiIyMDIwLTA0LTE1VDA5OjM3OjA5LjMzNCIsImV4cGlyZWRhdGUi...</msg>
<status status="PASS" starttime="20200415 16:37:09.521" endtime="20200415 16:37:09.522"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>recordConsentLogSS</arg>
<arg>${url_recordConsent}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200415 16:37:09.523" level="INFO">POST Request using : uri=/record-consent, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'network-user': 'user1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIwMDEiLCJpYXQiOiIyMDIwLTA0LTE1VDA5OjM3OjA5LjMzNCIsImV4cGlyZWRhdGUiOiIyMDIwLTA0LTE1VDEwOjM3OjA5LjMzNCIsInBoYXNlIjoiODNhMTMyNmM3MDI1YTQ5MDU4YzNhNzg1Y2FhZWE0YTYyMWE5ZDJmMyJ9.nrckSdQzsZhOqwxFmqMWK9nOzkaiP1uYrefJeZbdQew'} 
data={"mobile_no": "0810090001", "issuer": "AIS", "mobile_id_sn": "030810090001", "cid": "00000000-0000-0000-0000-030810090001"} 
json=None</msg>
<msg timestamp="20200415 16:37:09.642" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20200415 16:37:09.522" endtime="20200415 16:37:09.642"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200415 16:37:09.643" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20200415 16:37:09.643" endtime="20200415 16:37:09.643"></status>
</kw>
<status status="PASS" starttime="20200415 16:37:09.518" endtime="20200415 16:37:09.643"></status>
</kw>
<kw name="Response recordConsentLog Error 412: Existing cid" library="keyword_recordConsentLog">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>412</arg>
</arguments>
<msg timestamp="20200415 16:37:09.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200415 16:37:09.645" endtime="20200415 16:37:09.645"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${res_body}</var>
</assign>
<msg timestamp="20200415 16:37:09.646" level="INFO">${res_body} = {"error":"No valid responses from any peers. 1 peer error responses:\n    peer=peer0.ais.thaimobileid.com, status=412, message=Invalid Operation: ConsentLog must not exist in the system (cid: 00000000...</msg>
<status status="PASS" starttime="20200415 16:37:09.646" endtime="20200415 16:37:09.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res_body}</arg>
<arg>Invalid Operation: ConsentLog must not exist in the system (cid: ${cid}, mobile no: ${mobile_no}).</arg>
</arguments>
<status status="PASS" starttime="20200415 16:37:09.647" endtime="20200415 16:37:09.647"></status>
</kw>
<status status="PASS" starttime="20200415 16:37:09.644" endtime="20200415 16:37:09.647"></status>
</kw>
<kw name="Send getMobileId" library="keyword_getMobileId">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>getMobileIdSS</arg>
<arg>${base_url_issuer_mw}</arg>
</arguments>
<msg timestamp="20200415 16:37:09.649" level="INFO">Creating Session using : alias=getMobileIdSS, url=http://172.16.24.55:3216, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200415 16:37:09.648" endtime="20200415 16:37:09.649"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mobile_no=${mobile_no}</arg>
<arg>mobile_id_sn=${mobile_id_sn}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200415 16:37:09.650" level="INFO">${body} = {'mobile_no': '0810090001', 'mobile_id_sn': '030810090001'}</msg>
<status status="PASS" starttime="20200415 16:37:09.649" endtime="20200415 16:37:09.650"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>network-user=${network-user}</arg>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer ${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200415 16:37:09.651" level="INFO">${header} = {'network-user': 'user1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIwMDEiLCJpYXQiOiIyMDIwLTA0LTE1VDA5OjM3OjA5LjMzNCIsImV4cGlyZWRhdGUi...</msg>
<status status="PASS" starttime="20200415 16:37:09.650" endtime="20200415 16:37:09.651"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>getMobileIdSS</arg>
<arg>${url_getMobileId}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200415 16:37:09.652" level="INFO">POST Request using : uri=/get-mobileid, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'network-user': 'user1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIwMDEiLCJpYXQiOiIyMDIwLTA0LTE1VDA5OjM3OjA5LjMzNCIsImV4cGlyZWRhdGUiOiIyMDIwLTA0LTE1VDEwOjM3OjA5LjMzNCIsInBoYXNlIjoiODNhMTMyNmM3MDI1YTQ5MDU4YzNhNzg1Y2FhZWE0YTYyMWE5ZDJmMyJ9.nrckSdQzsZhOqwxFmqMWK9nOzkaiP1uYrefJeZbdQew'} 
data={"mobile_no": "0810090001", "mobile_id_sn": "030810090001"} 
json=None</msg>
<msg timestamp="20200415 16:37:09.761" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200415 16:37:09.651" endtime="20200415 16:37:09.761"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200415 16:37:09.762" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200415 16:37:09.762" endtime="20200415 16:37:09.762"></status>
</kw>
<status status="PASS" starttime="20200415 16:37:09.648" endtime="20200415 16:37:09.762"></status>
</kw>
<kw name="Response getMobileId should be Success" library="keyword_getMobileId">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200415 16:37:09.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200415 16:37:09.764" endtime="20200415 16:37:09.764"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${res_body}</var>
</assign>
<msg timestamp="20200415 16:37:09.765" level="INFO">${res_body} = [{"dg1":{"mobile_no":"0810090001","issuer":"AIS","mobile_id_sn":"030810090001","ial":"2.1","status":"A","face_engine_id":"YIT01234","timestamp":"2020-03-20T05:21:48"},"dg2":"dIFoYY9aKNeopGyKtICQwl1cGn...</msg>
<status status="PASS" starttime="20200415 16:37:09.765" endtime="20200415 16:37:09.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res_body}</arg>
<arg>${mobile_no}</arg>
</arguments>
<status status="PASS" starttime="20200415 16:37:09.766" endtime="20200415 16:37:09.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res_body}</arg>
<arg>${mobile_id_sn}</arg>
</arguments>
<status status="PASS" starttime="20200415 16:37:09.766" endtime="20200415 16:37:09.767"></status>
</kw>
<status status="PASS" starttime="20200415 16:37:09.763" endtime="20200415 16:37:09.767"></status>
</kw>
<kw name="Send getConsentLog" library="keyword_getConsentLog">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>getConsentLogSS</arg>
<arg>${base_url_issuer_mw}</arg>
</arguments>
<msg timestamp="20200415 16:37:09.768" level="INFO">Creating Session using : alias=getConsentLogSS, url=http://172.16.24.55:3216, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200415 16:37:09.768" endtime="20200415 16:37:09.769"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mobile_no=${mobile_no}</arg>
<arg>issuer=${issuer}</arg>
<arg>mobile_id_sn=${mobile_id_sn}</arg>
<arg>cid=${cid}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200415 16:37:09.770" level="INFO">${body} = {'mobile_no': '0810090001', 'issuer': 'AIS', 'mobile_id_sn': '030810090001', 'cid': '00000000-0000-0000-0000-030810090001'}</msg>
<status status="PASS" starttime="20200415 16:37:09.769" endtime="20200415 16:37:09.770"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>network-user=${network-user}</arg>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer ${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200415 16:37:09.771" level="INFO">${header} = {'network-user': 'user1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIwMDEiLCJpYXQiOiIyMDIwLTA0LTE1VDA5OjM3OjA5LjMzNCIsImV4cGlyZWRhdGUi...</msg>
<status status="PASS" starttime="20200415 16:37:09.770" endtime="20200415 16:37:09.771"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>getConsentLogSS</arg>
<arg>${url_getConsent}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200415 16:37:09.772" level="INFO">POST Request using : uri=/get-consent-log, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'network-user': 'user1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIwMDEiLCJpYXQiOiIyMDIwLTA0LTE1VDA5OjM3OjA5LjMzNCIsImV4cGlyZWRhdGUiOiIyMDIwLTA0LTE1VDEwOjM3OjA5LjMzNCIsInBoYXNlIjoiODNhMTMyNmM3MDI1YTQ5MDU4YzNhNzg1Y2FhZWE0YTYyMWE5ZDJmMyJ9.nrckSdQzsZhOqwxFmqMWK9nOzkaiP1uYrefJeZbdQew'} 
data={"mobile_no": "0810090001", "issuer": "AIS", "mobile_id_sn": "030810090001", "cid": "00000000-0000-0000-0000-030810090001"} 
json=None</msg>
<msg timestamp="20200415 16:37:09.863" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200415 16:37:09.771" endtime="20200415 16:37:09.863"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200415 16:37:09.865" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200415 16:37:09.864" endtime="20200415 16:37:09.865"></status>
</kw>
<status status="PASS" starttime="20200415 16:37:09.768" endtime="20200415 16:37:09.865"></status>
</kw>
<kw name="Response getConsentLog should be Success" library="keyword_getConsentLog">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200415 16:37:09.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200415 16:37:09.867" endtime="20200415 16:37:09.868"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20200415 16:37:09.869" endtime="20200415 16:37:09.869"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${res_body}</var>
</assign>
<msg timestamp="20200415 16:37:09.871" level="INFO">${res_body} = {"aal":"2.1","cid":"00000000-0000-0000-0000-030810090001","created":"2020-03-20T17:13:29","face_score_verified":"1.0","issuer":"AIS","mobile_id_sn":"030810090001","mobile_no":"0810090001","ref1":"ref1...</msg>
<status status="PASS" starttime="20200415 16:37:09.870" endtime="20200415 16:37:09.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res_body}</arg>
<arg>${mobile_no}</arg>
</arguments>
<status status="PASS" starttime="20200415 16:37:09.871" endtime="20200415 16:37:09.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res_body}</arg>
<arg>${issuer}</arg>
</arguments>
<status status="PASS" starttime="20200415 16:37:09.872" endtime="20200415 16:37:09.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res_body}</arg>
<arg>${mobile_id_sn}</arg>
</arguments>
<status status="PASS" starttime="20200415 16:37:09.874" endtime="20200415 16:37:09.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res_body}</arg>
<arg>${cid}</arg>
</arguments>
<status status="PASS" starttime="20200415 16:37:09.875" endtime="20200415 16:37:09.876"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<status status="PASS" starttime="20200415 16:37:09.876" endtime="20200415 16:37:09.877"></status>
</kw>
<status status="PASS" starttime="20200415 16:37:09.866" endtime="20200415 16:37:09.877"></status>
</kw>
<status status="PASS" starttime="20200415 16:37:09.203" endtime="20200415 16:37:09.878" critical="yes"></status>
</test>
<doc>Suite description</doc>
<status status="PASS" starttime="20200415 16:37:07.417" endtime="20200415 16:37:09.879"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="RegisterMobileId">RegisterMobileId</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200415 16:37:09.111" level="ERROR">Error in file 'C:\Users\panruethai.e\PycharmProjects\CWNTEST\mobileId\ChainCodeAPI\Resources\Issuer\keyword_getToken.robot': Importing test library 'HttpLibrary.HTTP' failed: SyntaxError: invalid syntax (__init__.py, line 16)
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Users\panruethai.e\AppData\Local\Programs\Python\Python38-32\Scripts\robot.exe
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\python38.zip
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\DLLs
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib
  c:\users\panruethai.e\appdata\local\programs\python\python38-32
  C:\Users\panruethai.e\AppData\Roaming\Python\Python38\site-packages
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages\win32
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages\win32\lib
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages\Pythonwin</msg>
<msg timestamp="20200415 16:37:09.133" level="ERROR">Error in file 'C:\Users\panruethai.e\PycharmProjects\CWNTEST\mobileId\ChainCodeAPI\Resources\Issuer\keyword_enrollMobileId.robot': Importing test library 'HttpLibrary.HTTP' failed: SyntaxError: invalid syntax (__init__.py, line 16)
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Users\panruethai.e\AppData\Local\Programs\Python\Python38-32\Scripts\robot.exe
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\python38.zip
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\DLLs
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib
  c:\users\panruethai.e\appdata\local\programs\python\python38-32
  C:\Users\panruethai.e\AppData\Roaming\Python\Python38\site-packages
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages\win32
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages\win32\lib
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages\Pythonwin</msg>
<msg timestamp="20200415 16:37:09.166" level="ERROR">Error in file 'C:\Users\panruethai.e\PycharmProjects\CWNTEST\mobileId\ChainCodeAPI\Resources\Issuer\keyword_recordConsentLog.robot': Importing test library 'HttpLibrary.HTTP' failed: SyntaxError: invalid syntax (__init__.py, line 16)
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Users\panruethai.e\AppData\Local\Programs\Python\Python38-32\Scripts\robot.exe
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\python38.zip
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\DLLs
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib
  c:\users\panruethai.e\appdata\local\programs\python\python38-32
  C:\Users\panruethai.e\AppData\Roaming\Python\Python38\site-packages
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages\win32
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages\win32\lib
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages\Pythonwin</msg>
<msg timestamp="20200415 16:37:09.181" level="ERROR">Error in file 'C:\Users\panruethai.e\PycharmProjects\CWNTEST\mobileId\ChainCodeAPI\Resources\Issuer\keyword_getMobileId.robot': Importing test library 'HttpLibrary.HTTP' failed: SyntaxError: invalid syntax (__init__.py, line 16)
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Users\panruethai.e\AppData\Local\Programs\Python\Python38-32\Scripts\robot.exe
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\python38.zip
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\DLLs
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib
  c:\users\panruethai.e\appdata\local\programs\python\python38-32
  C:\Users\panruethai.e\AppData\Roaming\Python\Python38\site-packages
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages\win32
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages\win32\lib
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages\Pythonwin</msg>
<msg timestamp="20200415 16:37:09.198" level="ERROR">Error in file 'C:\Users\panruethai.e\PycharmProjects\CWNTEST\mobileId\ChainCodeAPI\Resources\Issuer\keyword_getConsentLog.robot': Importing test library 'HttpLibrary.HTTP' failed: SyntaxError: invalid syntax (__init__.py, line 16)
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Users\panruethai.e\AppData\Local\Programs\Python\Python38-32\Scripts\robot.exe
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\python38.zip
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\DLLs
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib
  c:\users\panruethai.e\appdata\local\programs\python\python38-32
  C:\Users\panruethai.e\AppData\Roaming\Python\Python38\site-packages
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages\win32
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages\win32\lib
  c:\users\panruethai.e\appdata\local\programs\python\python38-32\lib\site-packages\Pythonwin</msg>
</errors>
</robot>
